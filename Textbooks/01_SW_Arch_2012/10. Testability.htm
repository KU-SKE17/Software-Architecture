<!--[if IE]><![endif]-->
<!DOCTYPE html>
<!--[if IE 8]><html class="no-js ie8 oldie" lang="en" prefix="og: http://ogp.me/ns/# og:book: http://ogp.me/ns/book# og:video: http://ogp.me/ns/video#"

    
        itemscope itemtype="http://schema.org/Book http://schema.org/ItemPage"" data-login-url="/accounts/login/"
data-offline-url="/"
data-url="/library/view/software-architecture-in/9780132942799/ch10.html"
data-csrf-cookie="csrfsafari"
data-highlight-privacy=""


  data-user-id="640574"
  data-user-uuid="10f9e41b-1414-4ac1-bc80-973364aac808"
  data-username="aejunknaja"
  data-account-type="Trial"
  
  data-activated-trial-date="01/12/2016"
  


  data-archive="9780132942799"
  data-publishers="Addison-Wesley Professional"



  data-htmlfile-name="ch10.html"
  data-epub-title="Software Architecture in Practice, Third Edition" data-debug=0 data-testing=0><![endif]-->
<!--[if gt IE 8]><!-->
<html style="" class=" js flexbox flexboxlegacy no-touch no-websqldatabase indexeddb history csscolumns csstransforms localstorage sessionstorage applicationcache svg inlinesvg no-zoom" prefix="og: http://ogp.me/ns/# og:book: http://ogp.me/ns/book# og:video: http://ogp.me/ns/video#" itemscope="" itemtype="http://schema.org/Book http://schema.org/ItemPage" "="" data-login-url="/accounts/login/" data-offline-url="/" data-url="/library/view/software-architecture-in/9780132942799/ch10.html" data-csrf-cookie="csrfsafari" data-highlight-privacy="" data-user-id="640574" data-user-uuid="10f9e41b-1414-4ac1-bc80-973364aac808" data-username="aejunknaja" data-account-type="Trial" data-activated-trial-date="01/12/2016" data-archive="9780132942799" data-publishers="Addison-Wesley Professional" data-htmlfile-name="ch10.html" data-epub-title="Software Architecture in Practice, Third Edition" data-debug="0" data-testing="0" lang="en"><!--<![endif]--><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta charset="utf-8"><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"><meta name="author" content="Safari Books Online"><meta name="format-detection" content="telephone=no"><meta http-equiv="cleartype" content="on"><meta name="HandheldFriendly" content="True"><meta name="MobileOptimized" content="320"><meta name="apple-itunes-app" content="app-id=881697395, app-argument=safaridetail://9780132942799"><meta name="viewport" content="width=device-width, minimum-scale=1.0, initial-scale=1.0, maximum-scale=1.0"><meta property="twitter:account_id" content="4503599627559754"><script src="10.%20Testability_files/510f1a6865" type="text/javascript"></script><script src="10.%20Testability_files/nr-768.js"></script><script src="10.%20Testability_files/linkid.js" async="" type="text/javascript"></script><script src="10.%20Testability_files/analytics.js" async=""></script><script type="text/javascript">(window.NREUM||(NREUM={})).loader_config={xpid:"VQQDUVVVGwACU1RUAQA="};window.NREUM||(NREUM={}),__nr_require=function(t,e,n){function r(n){if(!e[n]){var o=e[n]={exports:{}};t[n][0].call(o.exports,function(e){var o=t[n][1][e];return r(o||e)},o,o.exports)}return e[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<n.length;o++)r(n[o]);return r}({QJf3ax:[function(t,e){function n(t){function e(e,n,a){t&&t(e,n,a),a||(a={});for(var c=s(e),f=c.length,u=i(a,o,r),d=0;f>d;d++)c[d].apply(u,n);return u}function a(t,e){f[t]=s(t).concat(e)}function s(t){return f[t]||[]}function c(){return n(e)}var f={};return{on:a,emit:e,create:c,listeners:s,_events:f}}function r(){return{}}var o="nr@context",i=t("gos");e.exports=n()},{gos:"7eSDFh"}],ee:[function(t,e){e.exports=t("QJf3ax")},{}],3:[function(t){function e(t){try{i.console&&console.log(t)}catch(e){}}var n,r=t("ee"),o=t(1),i={};try{n=localStorage.getItem("__nr_flags").split(","),console&&"function"==typeof console.log&&(i.console=!0,-1!==n.indexOf("dev")&&(i.dev=!0),-1!==n.indexOf("nr_dev")&&(i.nrDev=!0))}catch(a){}i.nrDev&&r.on("internal-error",function(t){e(t.stack)}),i.dev&&r.on("fn-err",function(t,n,r){e(r.stack)}),i.dev&&(e("NR AGENT IN DEVELOPMENT MODE"),e("flags: "+o(i,function(t){return t}).join(", ")))},{1:24,ee:"QJf3ax"}],4:[function(t){function e(t,e,n,i,s){try{c?c-=1:r("err",[s||new UncaughtException(t,e,n)])}catch(f){try{r("ierr",[f,(new Date).getTime(),!0])}catch(u){}}return"function"==typeof a?a.apply(this,o(arguments)):!1}function UncaughtException(t,e,n){this.message=t||"Uncaught error with no additional information",this.sourceURL=e,this.line=n}function n(t){r("err",[t,(new Date).getTime()])}var r=t("handle"),o=t(6),i=t("ee"),a=window.onerror,s=!1,c=0;t("loader").features.err=!0,t(5),window.onerror=e;try{throw new Error}catch(f){"stack"in f&&(t(1),t(2),"addEventListener"in window&&t(3),window.XMLHttpRequest&&XMLHttpRequest.prototype&&XMLHttpRequest.prototype.addEventListener&&window.XMLHttpRequest&&XMLHttpRequest.prototype&&XMLHttpRequest.prototype.addEventListener&&!/CriOS/.test(navigator.userAgent)&&t(4),s=!0)}i.on("fn-start",function(){s&&(c+=1)}),i.on("fn-err",function(t,e,r){s&&(this.thrown=!0,n(r))}),i.on("fn-end",function(){s&&!this.thrown&&c>0&&(c-=1)}),i.on("internal-error",function(t){r("ierr",[t,(new Date).getTime(),!0])})},{1:11,2:10,3:8,4:12,5:3,6:25,ee:"QJf3ax",handle:"D5DuLP",loader:"G9z0Bl"}],5:[function(t){if(window.addEventListener){var e=t("handle"),n=t("ee");t(1),window.addEventListener("click",function(){e("inc",["ck"])},!1),window.addEventListener("hashchange",function(){e("inc",["hc"])},!1),n.on("pushState-start",function(){e("inc",["ps"])})}},{1:9,ee:"QJf3ax",handle:"D5DuLP"}],6:[function(t){t("loader").features.ins=!0},{loader:"G9z0Bl"}],7:[function(t){function e(){}if(window.performance&&window.performance.timing&&window.performance.getEntriesByType){var n=t("ee"),r=t("handle"),o=t(1),i=t(2);t("loader").features.stn=!0,t(3);var a=Event;n.on("fn-start",function(t){var e=t[0];e instanceof a&&(this.bstStart=Date.now())}),n.on("fn-end",function(t,e){var n=t[0];n instanceof a&&r("bst",[n,e,this.bstStart,Date.now()])}),o.on("fn-start",function(t,e,n){this.bstStart=Date.now(),this.bstType=n}),o.on("fn-end",function(t,e){r("bstTimer",[e,this.bstStart,Date.now(),this.bstType])}),i.on("fn-start",function(){this.bstStart=Date.now()}),i.on("fn-end",function(t,e){r("bstTimer",[e,this.bstStart,Date.now(),"requestAnimationFrame"])}),n.on("pushState-start",function(){this.time=Date.now(),this.startPath=location.pathname+location.hash}),n.on("pushState-end",function(){r("bstHist",[location.pathname+location.hash,this.startPath,this.time])}),"addEventListener"in window.performance&&(window.performance.addEventListener("webkitresourcetimingbufferfull",function(){r("bstResource",[window.performance.getEntriesByType("resource")]),window.performance.webkitClearResourceTimings()},!1),window.performance.addEventListener("resourcetimingbufferfull",function(){r("bstResource",[window.performance.getEntriesByType("resource")]),window.performance.clearResourceTimings()},!1)),document.addEventListener("scroll",e,!1),document.addEventListener("keypress",e,!1),document.addEventListener("click",e,!1)}},{1:11,2:10,3:9,ee:"QJf3ax",handle:"D5DuLP",loader:"G9z0Bl"}],8:[function(t,e){function n(t){i.inPlace(t,["addEventListener","removeEventListener"],"-",r)}function r(t){return t[1]}var o=t("ee").create(),i=t(1)(o),a=t("gos");if(e.exports=o,n(window),"getPrototypeOf"in Object){for(var s=document;s&&!s.hasOwnProperty("addEventListener");)s=Object.getPrototypeOf(s);s&&n(s);for(var c=XMLHttpRequest.prototype;c&&!c.hasOwnProperty("addEventListener");)c=Object.getPrototypeOf(c);c&&n(c)}else XMLHttpRequest.prototype.hasOwnProperty("addEventListener")&&n(XMLHttpRequest.prototype);o.on("addEventListener-start",function(t,e){function n(){return s}if(t[1]){var r=t[1];if("function"==typeof r){var s=a(r,"nr@wrapped",function(){return i(r,"fn-",n,r.name||"anonymous")});this.wrapped=t[1]=s,o.emit("initEventContext",[t,e],this.wrapped)}else"function"==typeof r.handleEvent&&i.inPlace(r,["handleEvent"],"fn-")}}),o.on("removeEventListener-start",function(t){var e=this.wrapped;e&&(t[1]=e)})},{1:26,ee:"QJf3ax",gos:"7eSDFh"}],9:[function(t,e){var n=t("ee").create(),r=t(1)(n);e.exports=n,r.inPlace(window.history,["pushState","replaceState"],"-")},{1:26,ee:"QJf3ax"}],10:[function(t,e){var n=t("ee").create(),r=t(1)(n);e.exports=n,r.inPlace(window,["requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame"],"raf-"),n.on("raf-start",function(t){t[0]=r(t[0],"fn-")})},{1:26,ee:"QJf3ax"}],11:[function(t,e){function n(t,e,n){t[0]=i(t[0],"fn-",null,n)}function r(t,e,n){function r(){return a}this.ctx={};var a={"nr@context":this.ctx};o.emit("initTimerContext",[t,n],a),t[0]=i(t[0],"fn-",r,n)}var o=t("ee").create(),i=t(1)(o);e.exports=o,i.inPlace(window,["setTimeout","setImmediate"],"setTimer-"),i.inPlace(window,["setInterval"],"setInterval-"),i.inPlace(window,["clearTimeout","clearImmediate"],"clearTimeout-"),o.on("setInterval-start",n),o.on("setTimer-start",r)},{1:26,ee:"QJf3ax"}],12:[function(t,e){function n(){f.inPlace(this,p,"fn-",o)}function r(t,e){f.inPlace(e,["onreadystatechange"],"fn-")}function o(t,e){return e}function i(t,e){for(var n in t)e[n]=t[n];return e}var a=t("ee").create(),s=t(1),c=t(2),f=c(a),u=c(s),d=window.XMLHttpRequest,p=["onload","onerror","onabort","onloadstart","onloadend","onprogress","ontimeout"];e.exports=a,window.XMLHttpRequest=function(t){var e=new d(t);try{a.emit("new-xhr",[],e),e.hasOwnProperty("addEventListener")&&u.inPlace(e,["addEventListener","removeEventListener"],"-",o),e.addEventListener("readystatechange",n,!1)}catch(r){try{a.emit("internal-error",[r])}catch(i){}}return e},i(d,XMLHttpRequest),XMLHttpRequest.prototype=d.prototype,f.inPlace(XMLHttpRequest.prototype,["open","send"],"-xhr-",o),a.on("send-xhr-start",r),a.on("open-xhr-start",r)},{1:8,2:26,ee:"QJf3ax"}],13:[function(t){function e(t){var e=this.params,r=this.metrics;if(!this.ended){this.ended=!0;for(var i=0;c>i;i++)t.removeEventListener(s[i],this.listener,!1);if(!e.aborted){if(r.duration=(new Date).getTime()-this.startTime,4===t.readyState){e.status=t.status;var a=t.responseType,f="arraybuffer"===a||"blob"===a||"json"===a?t.response:t.responseText,u=n(f);if(u&&(r.rxSize=u),this.sameOrigin){var d=t.getResponseHeader("X-NewRelic-App-Data");d&&(e.cat=d.split(", ").pop())}}else e.status=0;r.cbTime=this.cbTime,o("xhr",[e,r,this.startTime])}}}function n(t){if("string"==typeof t&&t.length)return t.length;if("object"!=typeof t)return void 0;if("undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer&&t.byteLength)return t.byteLength;if("undefined"!=typeof Blob&&t instanceof Blob&&t.size)return t.size;if("undefined"!=typeof FormData&&t instanceof FormData)return void 0;try{return JSON.stringify(t).length}catch(e){return void 0}}function r(t,e){var n=i(e),r=t.params;r.host=n.hostname+":"+n.port,r.pathname=n.pathname,t.sameOrigin=n.sameOrigin}if(window.XMLHttpRequest&&XMLHttpRequest.prototype&&XMLHttpRequest.prototype.addEventListener&&!/CriOS/.test(navigator.userAgent)){t("loader").features.xhr=!0;var o=t("handle"),i=t(2),a=t("ee"),s=["load","error","abort","timeout"],c=s.length,f=t(1),u=window.XMLHttpRequest;t(4),t(3),a.on("new-xhr",function(){this.totalCbs=0,this.called=0,this.cbTime=0,this.end=e,this.ended=!1,this.xhrGuids={}}),a.on("open-xhr-start",function(t){this.params={method:t[0]},r(this,t[1]),this.metrics={}}),a.on("open-xhr-end",function(t,e){"loader_config"in NREUM&&"xpid"in NREUM.loader_config&&this.sameOrigin&&e.setRequestHeader("X-NewRelic-ID",NREUM.loader_config.xpid)}),a.on("send-xhr-start",function(t,e){var r=this.metrics,o=t[0],i=this;if(r&&o){var f=n(o);f&&(r.txSize=f)}this.startTime=(new Date).getTime(),this.listener=function(t){try{"abort"===t.type&&(i.params.aborted=!0),("load"!==t.type||i.called===i.totalCbs&&(i.onloadCalled||"function"!=typeof e.onload))&&i.end(e)}catch(n){try{a.emit("internal-error",[n])}catch(r){}}};for(var u=0;c>u;u++)e.addEventListener(s[u],this.listener,!1)}),a.on("xhr-cb-time",function(t,e,n){this.cbTime+=t,e?this.onloadCalled=!0:this.called+=1,this.called!==this.totalCbs||!this.onloadCalled&&"function"==typeof n.onload||this.end(n)}),a.on("xhr-load-added",function(t,e){var n=""+f(t)+!!e;this.xhrGuids&&!this.xhrGuids[n]&&(this.xhrGuids[n]=!0,this.totalCbs+=1)}),a.on("xhr-load-removed",function(t,e){var n=""+f(t)+!!e;this.xhrGuids&&this.xhrGuids[n]&&(delete this.xhrGuids[n],this.totalCbs-=1)}),a.on("addEventListener-end",function(t,e){e instanceof u&&"load"===t[0]&&a.emit("xhr-load-added",[t[1],t[2]],e)}),a.on("removeEventListener-end",function(t,e){e instanceof u&&"load"===t[0]&&a.emit("xhr-load-removed",[t[1],t[2]],e)}),a.on("fn-start",function(t,e,n){e instanceof u&&("onload"===n&&(this.onload=!0),("load"===(t[0]&&t[0].type)||this.onload)&&(this.xhrCbStart=(new Date).getTime()))}),a.on("fn-end",function(t,e){this.xhrCbStart&&a.emit("xhr-cb-time",[(new Date).getTime()-this.xhrCbStart,this.onload,e],e)})}},{1:"XL7HBI",2:14,3:12,4:8,ee:"QJf3ax",handle:"D5DuLP",loader:"G9z0Bl"}],14:[function(t,e){e.exports=function(t){var e=document.createElement("a"),n=window.location,r={};e.href=t,r.port=e.port;var o=e.href.split("://");return!r.port&&o[1]&&(r.port=o[1].split("/")[0].split("@").pop().split(":")[1]),r.port&&"0"!==r.port||(r.port="https"===o[0]?"443":"80"),r.hostname=e.hostname||n.hostname,r.pathname=e.pathname,r.protocol=o[0],"/"!==r.pathname.charAt(0)&&(r.pathname="/"+r.pathname),r.sameOrigin=!e.hostname||e.hostname===document.domain&&e.port===n.port&&e.protocol===n.protocol,r}},{}],15:[function(t,e){function n(t){return function(){r(t,[(new Date).getTime()].concat(i(arguments)))}}var r=t("handle"),o=t(1),i=t(2);"undefined"==typeof window.newrelic&&(newrelic=window.NREUM);var a=["setPageViewName","addPageAction","setCustomAttribute","finished","addToTrace","inlineHit","noticeError"];o(a,function(t,e){window.NREUM[e]=n("api-"+e)}),e.exports=window.NREUM},{1:24,2:25,handle:"D5DuLP"}],gos:[function(t,e){e.exports=t("7eSDFh")},{}],"7eSDFh":[function(t,e){function n(t,e,n){if(r.call(t,e))return t[e];var o=n();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(t,e,{value:o,writable:!0,enumerable:!1}),o}catch(i){}return t[e]=o,o}var r=Object.prototype.hasOwnProperty;e.exports=n},{}],D5DuLP:[function(t,e){function n(t,e,n){return r.listeners(t).length?r.emit(t,e,n):void(r.q&&(r.q[t]||(r.q[t]=[]),r.q[t].push(e)))}var r=t("ee").create();e.exports=n,n.ee=r,r.q={}},{ee:"QJf3ax"}],handle:[function(t,e){e.exports=t("D5DuLP")},{}],XL7HBI:[function(t,e){function n(t){var e=typeof t;return!t||"object"!==e&&"function"!==e?-1:t===window?0:i(t,o,function(){return r++})}var r=1,o="nr@id",i=t("gos");e.exports=n},{gos:"7eSDFh"}],id:[function(t,e){e.exports=t("XL7HBI")},{}],G9z0Bl:[function(t,e){function n(){var t=p.info=NREUM.info,e=f.getElementsByTagName("script")[0];if(t&&t.licenseKey&&t.applicationID&&e){s(d,function(e,n){e in t||(t[e]=n)});var n="https"===u.split(":")[0]||t.sslForHttp;p.proto=n?"https://":"http://",a("mark",["onload",i()]);var r=f.createElement("script");r.src=p.proto+t.agent,e.parentNode.insertBefore(r,e)}}function r(){"complete"===f.readyState&&o()}function o(){a("mark",["domContent",i()])}function i(){return(new Date).getTime()}var a=t("handle"),s=t(1),c=window,f=c.document;t(2);var u=(""+location).split("?")[0],d={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-768.min.js"},p=e.exports={offset:i(),origin:u,features:{}};f.addEventListener?(f.addEventListener("DOMContentLoaded",o,!1),c.addEventListener("load",n,!1)):(f.attachEvent("onreadystatechange",r),c.attachEvent("onload",n)),a("mark",["firstbyte",i()])},{1:24,2:15,handle:"D5DuLP"}],loader:[function(t,e){e.exports=t("G9z0Bl")},{}],24:[function(t,e){function n(t,e){var n=[],o="",i=0;for(o in t)r.call(t,o)&&(n[i]=e(o,t[o]),i+=1);return n}var r=Object.prototype.hasOwnProperty;e.exports=n},{}],25:[function(t,e){function n(t,e,n){e||(e=0),"undefined"==typeof n&&(n=t?t.length:0);for(var r=-1,o=n-e||0,i=Array(0>o?0:o);++r<o;)i[r]=t[e+r];return i}e.exports=n},{}],26:[function(t,e){function n(t){return!(t&&"function"==typeof t&&t.apply&&!t[i])}var r=t("ee"),o=t(1),i="nr@original",a=Object.prototype.hasOwnProperty;e.exports=function(t){function e(t,e,r,a){function nrWrapper(){var n,i,s,f;try{i=this,n=o(arguments),s=r&&r(n,i)||{}}catch(d){u([d,"",[n,i,a],s])}c(e+"start",[n,i,a],s);try{return f=t.apply(i,n)}catch(p){throw c(e+"err",[n,i,p],s),p}finally{c(e+"end",[n,i,f],s)}}return n(t)?t:(e||(e=""),nrWrapper[i]=t,f(t,nrWrapper),nrWrapper)}function s(t,r,o,i){o||(o="");var a,s,c,f="-"===o.charAt(0);for(c=0;c<r.length;c++)s=r[c],a=t[s],n(a)||(t[s]=e(a,f?s+o:o,i,s))}function c(e,n,r){try{t.emit(e,n,r)}catch(o){u([o,e,n,r])}}function f(t,e){if(Object.defineProperty&&Object.keys)try{var n=Object.keys(t);return n.forEach(function(n){Object.defineProperty(e,n,{get:function(){return t[n]},set:function(e){return t[n]=e,e}})}),e}catch(r){u([r])}for(var o in t)a.call(t,o)&&(e[o]=t[o]);return e}function u(e){try{t.emit("internal-error",e)}catch(n){}}return t||(t=r),e.inPlace=s,e.flag=i,e}},{1:25,ee:"QJf3ax"}]},{},["G9z0Bl",4,13,7,6,5]);</script><link rel="apple-touch-icon" href="https://www.safaribooksonline.com/static/images/apple-touch-icon.dc4dcf1f75e0.png"><link rel="shortcut icon" href="https://www.safaribooksonline.com/favicon.ico" type="image/x-icon"><link href="10.%20Testability_files/css.css" rel="stylesheet" type="text/css"><title>10. Testability - Software Architecture in Practice, Third Edition</title><link rel="stylesheet" href="10.%20Testability_files/e4f5174e8e7b.css" type="text/css"><link rel="stylesheet" type="text/css" href="10.%20Testability_files/annotator.css"><link rel="stylesheet" href="10.%20Testability_files/font-awesome.css"><style type="text/css" title="ibis-book">
    #sbo-rt-content div{margin-top:4pt;margin-bottom:4pt;margin-right:15pt}#sbo-rt-content h1{margin-top:15pt;margin-bottom:12pt;text-align:center;font-weight:bold}#sbo-rt-content h2{margin-top:7pt;margin-bottom:25pt;text-align:left;font-weight:bold}#sbo-rt-content h3{margin-top:9pt;margin-bottom:8pt;font-weight:bold;text-align:left}#sbo-rt-content h4{margin-top:9pt;margin-bottom:6pt;text-align:left;font-weight:bold}#sbo-rt-content h5{margin-top:9pt;margin-bottom:6pt;font-weight:bold;text-align:left}#sbo-rt-content h6{margin-top:9pt;margin-bottom:6pt;font-weight:bold;text-align:left}#sbo-rt-content .cover{margin-top:2pt;margin-bottom:2pt;text-align:center}#sbo-rt-content .author{margin-top:40pt;font-weight:bold;text-align:center}#sbo-rt-content div.image,#sbo-rt-content img{max-width:99%;max-height:99%}#sbo-rt-content .image{margin-bottom:5pt;text-align:center}#sbo-rt-content .toc-part{margin-top:25pt;margin-bottom:5pt;margin-left:10pt;text-align:left}#sbo-rt-content .toc-chapter{margin-top:10pt;margin-bottom:5pt;margin-left:25pt;text-align:left}#sbo-rt-content .toc-chapter1{margin-top:10pt;margin-bottom:5pt;margin-left:18pt;text-align:left}#sbo-rt-content .toc-section{margin-top:4pt;margin-bottom:4pt;margin-left:55pt;text-align:left}#sbo-rt-content .indexmain{margin-top:2pt;margin-bottom:2pt;text-align:left}#sbo-rt-content .indexmain1{margin-top:18pt;margin-bottom:2pt;text-align:left}#sbo-rt-content .indexsub{margin-top:2pt;margin-bottom:2pt;margin-left:35pt;text-indent:-15pt;text-align:left}#sbo-rt-content .copy{margin-top:8pt;margin-bottom:8pt;text-indent:.024pt}#sbo-rt-content .indent{margin-top:4pt;margin-bottom:5pt;text-indent:18pt;text-align:left}#sbo-rt-content .indenthangingB{margin-top:4pt;margin-bottom:4pt;margin-left:40pt;text-indent:-7pt;text-align:left}#sbo-rt-content .indenthangingBB{margin-top:4pt;margin-bottom:4pt;margin-left:58pt;text-indent:-6.5pt;text-align:left}#sbo-rt-content .indenthangingBBB{margin-top:4pt;margin-bottom:4pt;margin-left:80pt;text-indent:-6pt;text-align:left}#sbo-rt-content .indenthangingBP{margin-top:4pt;margin-bottom:4pt;margin-left:40pt;text-align:left}#sbo-rt-content .indenthangingBP1{margin-top:4pt;margin-bottom:4pt;margin-left:30pt;text-indent:15pt;text-align:left}#sbo-rt-content .tab-caption{font-weight:bold;margin-top:14pt;margin-bottom:8pt;text-align:center;page-break-after:avoid;page-break-inside:avoid}#sbo-rt-content .source{font-size:medium;margin-top:2pt;margin-bottom:2pt;page-break-before:avoid;page-break-inside:avoid;text-align:center}#sbo-rt-content .fig-caption{font-weight:bold;margin-top:4pt;margin-bottom:14pt;text-align:center;page-break-before:avoid;page-break-inside:avoid}#sbo-rt-content .fig-caption2{font-weight:bold;margin-top:4pt;margin-bottom:14pt;text-align:left;page-break-before:avoid;page-break-inside:avoid}#sbo-rt-content .blockquote{margin-top:7pt;margin-bottom:2pt;margin-left:60pt;text-align:left}#sbo-rt-content .attribution{margin-top:2pt;margin-bottom:17pt;margin-right:40pt;text-align:right}#sbo-rt-content .attribution1{margin-top:2pt;margin-bottom:17pt;margin-right:15pt;text-align:right}#sbo-rt-content .attri{margin-left:100pt;margin-right:100pt}#sbo-rt-content .toc-preface{margin-top:5pt;margin-bottom:5pt;margin-left:65pt;text-align:left}#sbo-rt-content .toc-appendix{margin-top:10pt;margin-bottom:5pt;margin-left:55pt;text-align:left}#sbo-rt-content .toc-index{margin-top:10pt;margin-bottom:5pt;margin-left:55pt;text-align:left}#sbo-rt-content .bib{margin-top:10pt;margin-bottom:5pt;margin-left:15pt;text-align:left}#sbo-rt-content .footnote{font-size:small;margin-top:4pt;margin-bottom:4pt;margin-left:20pt;text-indent:-11pt;text-align:left}#sbo-rt-content .pre{font-family:"Courier New";font-size:small;margin-top:5pt;margin-bottom:5pt;margin-left:13pt}#sbo-rt-content .pre1{font-family:"Courier New";font-size:small;margin-top:5pt;margin-bottom:5pt;margin-left:25pt}#sbo-rt-content .codelink{font-size:small;margin-top:6pt;margin-bottom:6pt;font-weight:bold;page-break-after:avoid}#sbo-rt-content .image1{text-align:center;page-break-before:always}#sbo-rt-content div.image1,#sbo-rt-content img{max-width:99%;max-height:99%}#sbo-rt-content code{font-size:small}#sbo-rt-content .edition{font-size:15pt;margin-top:15pt;margin-bottom:15pt;text-align:center;font-weight:bold}#sbo-rt-content .equation{text-align:center}#sbo-rt-content .indenthangingN{margin-top:4pt;margin-bottom:4pt;margin-left:50pt;text-indent:-12pt;text-align:left}#sbo-rt-content .indenthangingNaa{margin-top:4pt;margin-bottom:4pt;margin-left:48pt;text-indent:-11pt;text-align:left}#sbo-rt-content .indenthangingNP1{margin-top:4pt;margin-bottom:4pt;margin-left:30pt;text-align:left}#sbo-rt-content .indenthangingNP{margin-top:4pt;margin-bottom:4pt;margin-left:30pt;text-indent:15pt;text-align:left}#sbo-rt-content .indenthangingN1{margin-top:4pt;margin-bottom:4pt;margin-left:50pt;text-indent:-17.5pt;text-align:left}#sbo-rt-content .indenthangingNB{margin-top:4pt;margin-bottom:4pt;margin-left:75pt;text-indent:-7.5pt;text-align:left}#sbo-rt-content .noindent{margin-top:4pt;margin-bottom:4pt;text-indent:.02pt}#sbo-rt-content .publisher{margin-top:130pt;margin-bottom:2pt;text-align:center}#sbo-rt-content .publishertext{margin-top:6pt;margin-bottom:2pt;text-align:center}#sbo-rt-content .sidebar{font-size:medium;margin-top:6pt;margin-bottom:12pt;margin-left:24pt;margin-right:24pt}#sbo-rt-content .sb-noindent{margin-top:4pt;margin-bottom:4pt;text-indent:.02pt;margin-left:15pt;margin-right:15pt}#sbo-rt-content .sb-indent{margin-top:4pt;margin-bottom:5pt;text-indent:15pt;margin-left:15pt;margin-right:15pt}#sbo-rt-content .title{font-size:110%;margin-top:4pt;margin-bottom:4pt;font-weight:bold;margin-left:7pt;page-break-inside:avoid;page-break-after:avoid}#sbo-rt-content .question{margin-top:4pt;margin-bottom:4pt;margin-left:30pt;text-indent:-12pt;text-align:left}#sbo-rt-content .questiona{margin-top:4pt;margin-bottom:4pt;margin-left:70pt;text-indent:-11.5pt;text-align:left}#sbo-rt-content .questionP{margin-top:4pt;margin-bottom:4pt;margin-left:30pt;text-align:left}#sbo-rt-content .step{margin-top:4pt;margin-bottom:4pt;margin-left:65pt;text-indent:-38pt;text-align:left}#sbo-rt-content .division{font-size:100%;margin-top:4pt;margin-bottom:4pt;font-weight:bold;margin-left:10pt}#sbo-rt-content .question1{margin-top:4pt;margin-bottom:4pt;margin-left:29pt;text-indent:-18pt;text-align:left}#sbo-rt-content .copy1{margin-top:8pt;margin-bottom:8pt;margin-left:24pt;text-align:left;text-indent:.024pt}#sbo-rt-content .copy2{margin-top:8pt;margin-bottom:8pt;font-size:140%;text-align:left;text-indent:.024pt}#sbo-rt-content .copy3{margin-top:8pt;margin-bottom:8pt;font-size:130%;text-align:left;text-indent:.024pt}#sbo-rt-content .imagefir{text-align:center}
    </style><link rel="canonical" href="https://www.safaribooksonline.com/library/view/software-architecture-in/9780132942799/ch10.html"><meta name="description" content="10. Testability Testing leads to failure, and failure leads to understanding —Burt Rutan Industry estimates indicate that between 30 and 50 percent (or in some cases, even more) of the ... "><meta property="og:title" content="10. Testability"><meta itemprop="isPartOf" content="/library/view/software-architecture-in/9780132942799/"><meta itemprop="name" content="10. Testability"><meta property="og:url" itemprop="url" content="https://www.safaribooksonline.com/library/view/software-architecture-in/9780132942799/ch10.html"><meta property="og:site_name" content="Safari"><meta property="og:image" itemprop="thumbnailUrl" content="https://www.safaribooksonline.com/library/cover/9780132942799/"><meta property="og:description" itemprop="description" content="10. Testability Testing leads to failure, and failure leads to understanding —Burt Rutan Industry estimates indicate that between 30 and 50 percent (or in some cases, even more) of the ... "><meta itemprop="inLanguage" content="en"><meta itemprop="publisher" content="Addison-Wesley Professional"><meta property="og:type" content="book"><meta property="og:book:isbn" itemprop="isbn" content="9780132942799"><meta property="og:book:author" itemprop="author" content="Rick Kazman"><meta property="og:book:author" itemprop="author" content="Paul Clements"><meta property="og:book:author" itemprop="author" content="Len Bass"><meta property="og:book:tag" itemprop="about" content="Core Programming"><meta name="twitter:card" content="summary"><meta name="twitter:site" content="@safari"><style type="text/css" id="font-styles" data-template="#sbo-rt-content, #sbo-rt-content p, #sbo-rt-content div { font-size: &lt;%= font_size %&gt; !important; }"></style><style type="text/css" id="font-family" data-template="#sbo-rt-content, #sbo-rt-content p, #sbo-rt-content div { font-family: &lt;%= font_family %&gt; !important; }"></style><style type="text/css" id="column-width" data-template="#sbo-rt-content { max-width: &lt;%= column_width %&gt;% !important; margin: 0 auto !important; }"></style><!--[if lt IE 9]><script src="/static/js/src/respond.min.fa78ffe6f7ba.js"></script><![endif]--><script type="text/javascript" src="10.%20Testability_files/ecc99425e988.js" async=""></script><noscript><meta http-equiv="refresh" content="0; url=/library/no-js/" /></noscript><script type="text/javascript">
  (function(i,s,o,g,r,a,m) {
    i['GoogleAnalyticsObject']=r;
    i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();
    a=s.createElement(o),m=s.getElementsByTagName(o)[0];
    a.async=1;
    a.src=g;
    m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  var matches = document.cookie.match(/BrowserCookie\s*=\s*([a-f0-9\-]{36})/),
      user_uuid = null;

  if (matches && matches.length === 2) {
    user_uuid = matches[1];
  }


  ga('create', 'UA-39299553-7', {'userId': '10f9e41b-1414-4ac1-bc80-973364aac808' });


ga('set', 'dimension1', 'Trial');
ga('set', 'dimension6', user_uuid);


  ga('set', 'dimension2', '10f9e41b-1414-4ac1-bc80-973364aac808');
  




  //enable enhanced link tracking
  ga('require', 'linkid', 'linkid.js');

  // reading interface will track pageviews itself
  if (document.location.pathname.indexOf("/library/view") !== 0) {
    ga('send', 'pageview');
  }
</script><script src="10.%20Testability_files/_config.js" data-requiremodule="/static/js/pages/_config.1113c6153f5e.js" data-requirecontext="_" async="" charset="utf-8" type="text/javascript"></script><script src="10.%20Testability_files/_init.js" data-requiremodule="/static/js/nest/_init.1198db94d0a6.js" data-requirecontext="_" async="" charset="utf-8" type="text/javascript"></script><style id="annotator-dynamic-style">.annotator-adder, .annotator-outer, .annotator-notice {
  z-index: 100019;
}
.annotator-filter {
  z-index: 100009;
}</style></head>


<body class="reading sidenav  js-show-related scalefonts subscribe-panel library nav-collapsed">

    
      <div class="hide working" role="status">
        <div class="working-image"></div>
      </div>
      <div class="sbo-site-nav">
        



<a href="#container" class="skip">Skip to content</a><header class="topbar t-topbar"><nav role="navigation" class="js-site-nav"><ul class="topnav"><li class="logo t-logo"><a href="https://www.safaribooksonline.com/home/" class="l0 safari js-keyboard-nav-home"><em>Safari</em></a></li><li><a href="https://www.safaribooksonline.com/r/" class="t-recommendations-nav l0 ss-picks None"><span>Recommended</span></a></li><li><a href="https://www.safaribooksonline.com/s/" class="t-queue-nav l0 ss-queue None"><span>Queue</span></a></li><li class="search"><a href="#" class="t-search-nav trigger ss-search l0" data-dropdown-selector=".searchbox"><span>Search</span></a></li><li class="usermenu dropdown"><a href="#" class="trigger l0 ss-navigatedown nav-dropdown"><span>Expand Nav</span></a><div class="drop-content"><ul><li><a href="https://www.safaribooksonline.com/recent/" class="t-recent-nav l1 ss-recent None">Recent</a></li><li><a href="https://www.safaribooksonline.com/topics" class="t-topics-link l1 ss-hexbase None">Topics</a></li><li><a href="https://www.safaribooksonline.com/tutorials/" class="l1 ss-toots t-tutorials-nav js-toggle-menu-item None"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" version="1.1"><title>icon for tutorials
  </title><desc></desc><g stroke="none" stroke-width="1" fill-rule="evenodd"><path d="M15.8 18.2C15.8 18.2 15.9 18.2 16 18.2 16.1 18.2 16.2 18.2 16.4 18.2 16.5 18.2 16.7 18.1 16.9 18 17 17.9 17.1 17.8 17.2 17.7 17.3 17.6 17.4 17.5 17.4 17.4 17.5 17.2 17.6 16.9 17.6 16.7 17.6 16.6 17.6 16.5 17.6 16.4 17.5 16.2 17.5 16.1 17.4 15.9 17.3 15.8 17.2 15.6 17 15.5 16.8 15.3 16.6 15.3 16.4 15.2 16.2 15.2 16 15.2 15.8 15.2 15.7 15.2 15.5 15.3 15.3 15.4 15.2 15.4 15.1 15.5 15 15.7 14.9 15.8 14.8 15.9 14.7 16 14.7 16.1 14.6 16.3 14.6 16.4 14.6 16.5 14.6 16.6 14.6 16.6 14.6 16.7 14.6 16.9 14.6 17 14.6 17.1 14.7 17.3 14.7 17.4 14.8 17.6 15 17.7 15.1 17.9 15.2 18 15.3 18 15.5 18.1 15.5 18.1 15.6 18.2 15.7 18.2 15.7 18.2 15.7 18.2 15.8 18.2L15.8 18.2ZM9.4 11.5C9.5 11.5 9.5 11.5 9.6 11.5 9.7 11.5 9.9 11.5 10 11.5 10.2 11.5 10.3 11.4 10.5 11.3 10.6 11.2 10.8 11.1 10.9 11 10.9 10.9 11 10.8 11.1 10.7 11.2 10.5 11.2 10.2 11.2 10 11.2 9.9 11.2 9.8 11.2 9.7 11.2 9.5 11.1 9.4 11 9.2 10.9 9.1 10.8 8.9 10.6 8.8 10.5 8.7 10.3 8.6 10 8.5 9.9 8.5 9.7 8.5 9.5 8.5 9.3 8.5 9.1 8.6 9 8.7 8.8 8.7 8.7 8.8 8.6 9 8.5 9.1 8.4 9.2 8.4 9.3 8.2 9.5 8.2 9.8 8.2 10 8.2 10.1 8.2 10.2 8.2 10.3 8.2 10.5 8.3 10.6 8.4 10.7 8.5 10.9 8.6 11.1 8.7 11.2 8.9 11.3 9 11.4 9.1 11.4 9.2 11.4 9.3 11.5 9.3 11.5 9.3 11.5 9.4 11.5 9.4 11.5L9.4 11.5ZM3 4.8C3.1 4.8 3.1 4.8 3.2 4.8 3.4 4.8 3.5 4.8 3.7 4.8 3.8 4.8 4 4.7 4.1 4.6 4.3 4.5 4.4 4.4 4.5 4.3 4.6 4.2 4.6 4.1 4.7 4 4.8 3.8 4.8 3.5 4.8 3.3 4.8 3.1 4.8 3 4.8 2.9 4.7 2.8 4.7 2.6 4.6 2.5 4.5 2.3 4.4 2.2 4.2 2.1 4 1.9 3.8 1.9 3.6 1.8 3.5 1.8 3.3 1.8 3.1 1.8 2.9 1.8 2.7 1.9 2.6 2 2.4 2.1 2.3 2.2 2.2 2.3 2.1 2.4 2 2.5 2 2.6 1.8 2.8 1.8 3 1.8 3.3 1.8 3.4 1.8 3.5 1.8 3.6 1.8 3.8 1.9 3.9 2 4 2.1 4.2 2.2 4.4 2.4 4.5 2.5 4.6 2.6 4.7 2.7 4.7 2.8 4.7 2.9 4.8 2.9 4.8 3 4.8 3 4.8 3 4.8L3 4.8ZM13.1 15.2C13.2 15.1 13.2 15.1 13.2 15.1 13.3 14.9 13.4 14.7 13.6 14.5 13.8 14.2 14.1 14 14.4 13.8 14.7 13.6 15.1 13.5 15.5 13.4 15.9 13.4 16.3 13.4 16.7 13.5 17.2 13.5 17.6 13.7 17.9 13.9 18.2 14.1 18.5 14.4 18.7 14.7 18.9 15 19.1 15.3 19.2 15.6 19.3 15.9 19.4 16.1 19.4 16.4 19.4 17 19.3 17.5 19.1 18.1 19 18.3 18.9 18.5 18.7 18.7 18.5 19 18.3 19.2 18 19.4 17.7 19.6 17.3 19.8 16.9 19.9 16.6 20 16.3 20 16 20 15.8 20 15.6 20 15.4 19.9 15.4 19.9 15.4 19.9 15.4 19.9 15.2 19.9 15 19.8 14.9 19.8 14.8 19.7 14.7 19.7 14.6 19.7 14.4 19.6 14.3 19.5 14.1 19.3 13.7 19.1 13.4 18.7 13.2 18.4 13.1 18.1 12.9 17.8 12.9 17.5 12.8 17.3 12.8 17.1 12.8 16.9L3.5 14.9C3.3 14.9 3.1 14.8 3 14.8 2.7 14.7 2.4 14.5 2.1 14.3 1.7 14 1.4 13.7 1.2 13.3 1 13 0.9 12.6 0.8 12.3 0.7 12 0.7 11.7 0.7 11.4 0.7 11 0.8 10.5 1 10.1 1.1 9.8 1.3 9.5 1.6 9.2 1.8 8.9 2.1 8.7 2.4 8.5 2.8 8.3 3.2 8.1 3.6 8.1 3.9 8 4.2 8 4.5 8 4.6 8 4.8 8 4.9 8.1L6.8 8.5C6.8 8.4 6.8 8.4 6.8 8.4 6.9 8.2 7.1 8 7.2 7.8 7.5 7.5 7.7 7.3 8 7.1 8.4 6.9 8.7 6.8 9.1 6.7 9.5 6.7 10 6.7 10.4 6.8 10.8 6.8 11.2 7 11.5 7.2 11.8 7.5 12.1 7.7 12.4 8 12.6 8.3 12.7 8.6 12.8 8.9 12.9 9.2 13 9.4 13 9.7 13 9.7 13 9.8 13 9.8 13.6 9.9 14.2 10.1 14.9 10.2 15 10.2 15 10.2 15.1 10.2 15.3 10.2 15.4 10.2 15.6 10.2 15.8 10.1 16 10 16.2 9.9 16.4 9.8 16.5 9.6 16.6 9.5 16.8 9.2 16.9 8.8 16.9 8.5 16.9 8.3 16.9 8.2 16.8 8 16.8 7.8 16.7 7.7 16.6 7.5 16.5 7.3 16.3 7.2 16.2 7.1 16 7 15.9 6.9 15.8 6.9 15.7 6.9 15.6 6.8 15.5 6.8L6.2 4.8C6.2 5 6 5.2 5.9 5.3 5.7 5.6 5.5 5.8 5.3 6 4.9 6.2 4.5 6.4 4.1 6.5 3.8 6.6 3.5 6.6 3.2 6.6 3 6.6 2.8 6.6 2.7 6.6 2.6 6.6 2.6 6.5 2.6 6.5 2.5 6.5 2.3 6.5 2.1 6.4 1.8 6.3 1.6 6.1 1.3 6 1 5.7 0.7 5.4 0.5 5 0.3 4.7 0.2 4.4 0.1 4.1 0 3.8 0 3.6 0 3.3 0 2.8 0.1 2.2 0.4 1.7 0.5 1.5 0.7 1.3 0.8 1.1 1.1 0.8 1.3 0.6 1.6 0.5 2 0.3 2.3 0.1 2.7 0.1 3.1 0 3.6 0 4 0.1 4.4 0.2 4.8 0.3 5.1 0.5 5.5 0.8 5.7 1 6 1.3 6.2 1.6 6.3 1.9 6.4 2.3 6.5 2.5 6.6 2.7 6.6 3 6.6 3 6.6 3.1 6.6 3.1 9.7 3.8 12.8 4.4 15.9 5.1 16.1 5.1 16.2 5.2 16.4 5.2 16.7 5.3 16.9 5.5 17.2 5.6 17.5 5.9 17.8 6.2 18.1 6.5 18.3 6.8 18.4 7.2 18.6 7.5 18.6 7.9 18.7 8.2 18.7 8.6 18.7 9 18.6 9.4 18.4 9.8 18.3 10.1 18.2 10.3 18 10.6 17.8 10.9 17.5 11.1 17.3 11.3 16.9 11.6 16.5 11.8 16 11.9 15.7 12 15.3 12 15 12 14.8 12 14.7 12 14.5 11.9 13.9 11.8 13.3 11.7 12.6 11.5 12.5 11.7 12.4 11.9 12.3 12 12.1 12.3 11.9 12.5 11.7 12.7 11.3 12.9 10.9 13.1 10.5 13.2 10.2 13.3 9.9 13.3 9.6 13.3 9.4 13.3 9.2 13.3 9 13.2 9 13.2 9 13.2 9 13.2 8.8 13.2 8.7 13.2 8.5 13.1 8.2 13 8 12.8 7.7 12.6 7.4 12.4 7.1 12 6.8 11.7 6.7 11.4 6.6 11.1 6.5 10.8 6.4 10.6 6.4 10.4 6.4 10.2 5.8 10.1 5.2 9.9 4.5 9.8 4.4 9.8 4.4 9.8 4.3 9.8 4.1 9.8 4 9.8 3.8 9.8 3.6 9.9 3.4 10 3.2 10.1 3 10.2 2.9 10.4 2.8 10.5 2.6 10.8 2.5 11.1 2.5 11.5 2.5 11.6 2.5 11.8 2.6 12 2.6 12.1 2.7 12.3 2.8 12.5 2.9 12.6 3.1 12.8 3.2 12.9 3.3 13 3.5 13.1 3.6 13.1 3.7 13.1 3.8 13.2 3.9 13.2L13.1 15.2 13.1 15.2Z" fill="currentColor"></path></g></svg><em>Tutorials</em></a></li><li class="nav-highlights"><a href="https://www.safaribooksonline.com/u/001o000000ijSMHAA2/" class="t-highlights-nav l1 ss-highlights None">Highlights</a></li><li><a href="https://www.safaribooksonline.com/u/" class="t-settings-nav l1 js-settings ss-settings None">Settings</a></li><li><a href="https://community.safaribooksonline.com/" class="l1 no-icon">Feedback</a></li><li><a href="https://www.safaribooksonline.com/accounts/logout/" class="l1 no-icon">Sign Out</a></li></ul><ul class="profile"><li><a href="https://www.safaribooksonline.com/u/" class="l2 None">Settings</a><span class="l2 t-nag-notification" id="nav-nag"><strong class="trial-green">10</strong> days left in your trial.
  
  

  
    
      

<a class="" href="https://www.safaribooksonline.com/subscribe/">Subscribe</a>.


    
  

  

</span></li><li><a href="https://community.safaribooksonline.com/" class="l2">Feedback</a></li><li><a href="https://www.safaribooksonline.com/accounts/logout/" class="l2">Sign Out</a></li></ul></div></li></ul></nav></header>


      </div>
      <div style="height: auto;" id="container" class="application">
        
          <div class="nav-container clearfix">
            


            
            
          </div>

          

  <div class="js-toc">
    
      <div class="sbo-reading-menu sbo-menu-top"><section class="sbo-toc-container toc-menu"><a href="#" class="sbo-toc-thumb"><span class="sbo-title ss-list"><h1><div class="visuallyhidden">Table of Contents for </div>
      
      Software Architecture in Practice, Third Edition
      
    </h1></span></a><div class="toc-contents"></div></section></div>

    

    <div class="interface-controls interface-controls-top">
      <ul class="interface-control-btns js-bitlist js-reader">
        <li class="js-search-in-archive search-in-archive t-search-in-archive"><a href="#" title="Search in archive" class="js-search-controls search-controls"><span class="icon">Search in book...</span></a><form class="search-archive-bar js-search-form"><input name="q" placeholder="Search inside this book..." autocomplete="off" type="search"></form><div class="js-search-results search-archive-results"></div></li><li class="queue-control"><button title="Add to Queue" aria-label="Add to Queue" data-for-analytics="9780132942799:ch10.html" type="button" class="rec-fav ss-queue js-queue js-current-chapter-queue" data-queue-endpoint="/api/v1/book/9780132942799/chapter/ch10.html"><span>Add to Queue</span></button></li><li class="js-font-control-panel font-control-activator"><a href="#" data-push-state="false" id="font-controls" title="Change font size" aria-label="Change font size"><span class="icon">Toggle Font Controls</span></a></li><li class="dropdown sharing-controls"><a href="#" class="trigger" data-push-state="false" title="Share" aria-label="Share"><i class="fa fa-share"></i></a><ul class="social-sharing dropdown-menu"><li><a class="twitter share-button t-twitter" target="_blank" aria-label="Share this section on Twitter" title="Share this section on Twitter" href="https://twitter.com/share?url=https://www.safaribooksonline.com/library/view/software-architecture-in/9780132942799/ch10.html&amp;text=Software%20Architecture%20in%20Practice%2C%20Third%20Edition&amp;via=safari"><span>Twitter</span></a></li><li><a class="facebook share-button t-facebook" target="_blank" aria-label="Share this section on Facebook" title="Share this section on Facebook" href="https://www.facebook.com/sharer/sharer.php?u=https://www.safaribooksonline.com/library/view/software-architecture-in/9780132942799/ch10.html"><span>Facebook</span></a></li><li><a class="googleplus share-button t-googleplus" target="_blank" aria-label="Share this secton on Google Plus" title="Share this secton on Google Plus" href="https://plus.google.com/share?url=https://www.safaribooksonline.com/library/view/software-architecture-in/9780132942799/ch10.html"><span>Google Plus</span></a></li><li><a class="email share-button t-email" aria-label="Share this section via email" title="Share this section via email" href="mailto:?subject=Safari:%2010.%20Testability&amp;body=https://www.safaribooksonline.com/library/view/software-architecture-in/9780132942799/ch10.html%0D%0Afrom%20Software%20Architecture%20in%20Practice%2C%20Third%20Edition%0D%0A"><span>Email</span></a></li></ul></li>
      </ul>
    </div>

    <section role="document">
      
	  <div class="t-sbo-prev sbo-prev sbo-nav-top">
  
    
      
        <a href="https://www.safaribooksonline.com/library/view/software-architecture-in/9780132942799/ch09.html" class="prev nav-link">
      
          <span aria-hidden="true" class="pagination-label t-prev-label">Prev</span>
          <span class="visuallyhidden">Previous Chapter</span>
          <div class="pagination-title t-prev-title">9. Security</div>
        </a>
    
  
  </div>

  <div class="t-sbo-next sbo-next sbo-nav-top">
  
    
      
        <a href="https://www.safaribooksonline.com/library/view/software-architecture-in/9780132942799/ch11.html" class="next nav-link">
      
          <span aria-hidden="true" class="pagination-label t-next-label">Next</span>
          <span class="visuallyhidden">Next Chapter</span>
          <div class="pagination-title t-next-title">11. Usability</div>
        </a>
    
  
  </div>



<div id="sbo-rt-content"><div class="annotator-wrapper"><h2 id="ch10"><a id="page_159"></a>10. Testability</h2>
<div class="attri">
<p class="blockquote"><em>Testing leads to failure, and failure leads to understanding</em></p>
<p class="attribution">—Burt Rutan</p>
</div>
<p class="noindent">Industry estimates indicate that between 30 and 50 
percent (or in some cases, even more) of the cost of developing 
well-engineered systems is taken up by testing. If the software 
architect can reduce this cost, the payoff is large.</p>
<p class="indent">Software testability refers to the ease with which 
software can be made to demonstrate its faults through (typically 
execution-based) testing. Specifically, testability refers to the 
probability, assuming that the software has at least one fault, that it 
will fail on its next test execution. Intuitively, a system is testable 
if it “gives up” its faults easily. If a fault is present in a system, 
then we want it to fail during testing as quickly as possible. Of 
course, calculating this probability is not easy and, as you will see 
when we discuss response measures for testability, other measures will 
be used.</p>
<p class="indent"><a href="https://www.safaribooksonline.com/library/view/software-architecture-in/9780132942799/ch10.html#ch10fig01">Figure 10.1</a>
 shows a model of testing in which a program processes input and 
produces output. An oracle is an agent (human or mechanical) that 
decides whether the output is correct or not by comparing the output to 
the program’s specification. Output is not just the functionally 
produced value, but it also can include derived measures of quality 
attributes such as how long it took to produce the output. <a href="https://www.safaribooksonline.com/library/view/software-architecture-in/9780132942799/ch10.html#ch10fig01">Figure 10.1</a>
 also shows that the program’s internal state can also be shown to the 
oracle, and an oracle can decide whether that is correct or not—that is,
 it can detect whether the program has entered an erroneous state and 
render a judgment as to the correctness of the program.</p>
<div class="image"><a id="ch10fig01"></a><img data-mfp-src="/library/view/software-architecture-in/9780132942799/graphics/10fig01.jpg" src="10.%20Testability_files/10fig01.jpg" alt="Image" height="188" width="630"></div>
<p class="fig-caption">Figure 10.1. A model of testing</p>
<p class="indent">Setting and examining a program’s internal state is an
 aspect of testing that will figure prominently in our tactics for 
testability.</p>
<p class="noindent"><a id="page_160"></a>For a system to be properly 
testable, it must be possible to control each component’s inputs (and 
possibly manipulate its internal state) and then to observe its outputs 
(and possibly its internal state, either after or on the way to 
computing the outputs). Frequently this control and observation is done 
through the use of a test harness, which is specialized software (or in 
some cases, hardware) designed to exercise the software under test. Test
 harnesses come in various forms, such as a record-and-playback 
capability for data sent across various interfaces, or a simulator for 
an external environment in which a piece of embedded software is tested,
 or even during production (see sidebar). The test harness can provide 
assistance in executing the test procedures and recording the output. A 
test harness can be a substantial piece of software in its own right, 
with its own architecture, stakeholders, and quality attribute 
requirements.</p>
<p class="indent">Testing is carried out by various developers, users, 
or quality assurance personnel. Portions of the system or the entire 
system may be tested. The response measures for testability deal with 
how effective the tests are in discovering faults and how long it takes 
to perform the tests to some desired level of coverage. Test cases can 
be written by the developers, the testing group, or the customer. The 
test cases can be a portion of acceptance testing or can drive the 
development as they do in certain types of Agile methodologies.</p>
<div class="sidebar"><hr>
<p class="title"><a id="ch10sb01"></a>Netflix’s Simian Army</p>
<p class="sb-noindent">Netflix distributes movies and television shows 
both via DVD and via streaming video. Their streaming video service has 
been extremely successful. In May 2011 Netflix streaming video accounted
 for 24 percent of the Internet traffic in North America. Naturally, 
high availability is important to Netflix.</p>
<p class="sb-indent">Netflix hosts their computer services in the Amazon
 EC2 cloud, and they utilize what they call a “Simian Army” as a portion
 of their testing process. They began with a Chaos Monkey, which 
randomly kills processes in the <a id="page_161"></a>running system. 
This allows the monitoring of the effect of failed processes and gives 
the ability to ensure that the system does not fail or suffer serious 
degradation as a result of a process failure.</p>
<p class="sb-indent">Recently, the Chaos Monkey got some friends to assist in the testing. Currently, the Netflix Simian Army includes these:</p>
<p class="indenthangingB">• The Latency Monkey induces artificial delays
 in the client-server communication layer to simulate service 
degradation and measures if upstream services respond appropriately.</p>
<p class="indenthangingB">• The Conformity Monkey finds instances that 
don’t adhere to best practices and shuts them down. For example, if an 
instance does not belong to an auto-scaling group, it will not 
appropriately scale when demand goes up.</p>
<p class="indenthangingB">• The Doctor Monkey taps into health checks 
that run on each instance as well as monitors other external signs of 
health (e.g., CPU load) to detect unhealthy instances.</p>
<p class="indenthangingB">• The Janitor Monkey ensures that the Netflix 
cloud environment is running free of clutter and waste. It searches for 
unused resources and disposes of them.</p>
<p class="indenthangingB">• The Security Monkey is an extension of 
Conformity Monkey. It finds security violations or vulnerabilities, such
 as improperly configured security groups, and terminates the offending 
instances. It also ensures that all the SSL and digital rights 
management (DRM) certificates are valid and are not coming up for 
renewal.</p>
<p class="indenthangingB">• The 10-18 Monkey 
(localization-internationalization) detects configuration and runtime 
problems in instances serving customers in multiple geographic regions, 
using different languages and character sets. The name 10-18 comes from <em>L10n-i18n</em>, a sort of shorthand for the words <em>localization</em> and <em>internationalization</em>.</p>
<p class="sb-indent">Some of the members of the Simian Army use fault 
injection to place faults into the running system in a controlled and 
monitored fashion. Other members monitor various specialized aspects of 
the system and its environment. Both of these techniques have broader 
applicability than just Netflix.</p>
<p class="sb-indent">Not all faults are equal in terms of severity. More
 emphasis should be placed on finding the most severe faults than on 
finding other faults. The Simian Army reflects a determination by 
Netflix that the faults they look for are the most serious in terms of 
their impact.</p>
<p class="sb-indent">This strategy illustrates that some systems are too
 complex and adaptive to be tested fully, because some of their 
behaviors are emergent. An aspect of testing in that arena is logging of
 operational data produced by the system, so that when failures occur, 
the logged data can be analyzed in the lab to try to reproduce the 
faults. Architecturally this can require mechanisms to access and log 
certain system state. The Simian Army is one way to discover and log 
behavior in systems of this ilk.</p>
<p class="attribution">—<em>LB</em></p>
<hr></div>
<p class="indent"><a id="page_162"></a>Testing of code is a special case
 of validation, which is making sure that an engineered artifact meets 
the needs of its stakeholders or is suitable for use. In <a href="https://www.safaribooksonline.com/library/view/software-architecture-in/9780132942799/ch21.html#ch21">Chapter 21</a>
 we will discuss architectural design reviews. This is another kind of 
validation, where the artifact being tested is the architecture. In this
 chapter we are concerned only with the testability of a running system 
and of its source code.</p>
<h3 id="ch10lev1sec1">10.1. Testability General Scenario</h3>
<p class="noindent">We can now describe the general scenario for testability.</p>
<p class="indenthangingB">• <em>Source of stimulus.</em> The testing is 
performed by unit testers, integration testers, or system testers (on 
the developing organization side), or acceptance testers and end users 
(on the customer side). The source could be human or an automated 
tester.</p>
<p class="indenthangingB">• <em>Stimulus</em>. A set of tests is 
executed due to the completion of a coding increment such as a class 
layer or service, the completed integration of a subsystem, the complete
 implementation of the whole system, or the delivery of the system to 
the customer.</p>
<p class="indenthangingB">• <em>Artifact</em>. A unit of code (corresponding to a module in the architecture), a subsystem, or the whole system is the artifact being tested.</p>
<p class="indenthangingB">• <em>Environment</em>. The test can happen at
 development time, at compile time, at deployment time, or while the 
system is running (perhaps in routine use). The environment can also 
include the test harness or test environments in use.</p>
<p class="indenthangingB">• <em>Response</em>. The system can be controlled to perform the desired tests and the results from the test can be observed.</p>
<p class="indenthangingB">• <em>Response measure</em>. Response measures
 are aimed at representing how easily a system under test “gives up” its
 faults. Measures might include the effort involved in finding a fault 
or a particular class of faults, the effort required to test a given 
percentage of statements, the length of the longest test chain (a 
measure of the difficulty of performing the tests), measures of effort 
to perform the tests, measures of effort to actually find faults, 
estimates of the probability of finding additional faults, and the 
length of time or amount of effort to prepare the test environment.</p>
<p class="indenthangingBP1">Maybe one measure is the ease at which the 
system can be brought into a specific state. In addition, measures of 
the reduction in risk of the remaining errors in the system can be used.
 Not all faults are equal in terms of their possible impact. Measures of
 risk reduction attempt to rate the severity of faults found (or to be 
found).</p>
<p class="indent"><a href="https://www.safaribooksonline.com/library/view/software-architecture-in/9780132942799/ch10.html#ch10fig02">Figure 10.2</a>
 shows a concrete scenario for testability. The unit tester completes a 
code unit during development and performs a test sequence whose results 
are captured and that gives 85 percent path coverage within three hours 
of testing.</p>
<div class="image"><a id="ch10fig02"></a><img data-mfp-src="/library/view/software-architecture-in/9780132942799/graphics/10fig02.jpg" src="10.%20Testability_files/10fig02.jpg" alt="Image" height="251" width="598"></div>
<p class="fig-caption">Figure 10.2. Sample concrete testability scenario</p>
<p class="indent"><a id="page_163"></a><a href="https://www.safaribooksonline.com/library/view/software-architecture-in/9780132942799/ch10.html#ch10tab01">Table 10.1</a> enumerates the elements of the general scenario that characterize testability.</p>
<p class="tab-caption"><a id="ch10tab01"></a>Table 10.1. Testability General Scenario</p>
<div class="image"><img data-mfp-src="/library/view/software-architecture-in/9780132942799/graphics/10tab01.jpg" src="10.%20Testability_files/10tab01.jpg" alt="Image" height="426" width="631"></div>
<h3 id="ch10lev1sec2"><a id="page_164"></a>10.2. Tactics for Testability</h3>
<p class="noindent">The goal of tactics for testability is to allow for easier testing when an increment of software development is completed. <a href="https://www.safaribooksonline.com/library/view/software-architecture-in/9780132942799/ch10.html#ch10fig03">Figure 10.3</a>
 displays the use of tactics for testability. Architectural techniques 
for enhancing the software testability have not received as much 
attention as more mature quality attribute disciplines such as 
modifiability, performance, and availability, but as we stated before, 
anything the architect can do to reduce the high cost of testing will 
yield a significant benefit.</p>
<div class="image"><a id="ch10fig03"></a><img data-mfp-src="/library/view/software-architecture-in/9780132942799/graphics/10fig03.jpg" src="10.%20Testability_files/10fig03.jpg" alt="Image" height="253" width="630"></div>
<p class="fig-caption">Figure 10.3. The goal of testability tactics</p>
<p class="indent">There are two categories of tactics for testability. 
The first category deals with adding controllability and observability 
to the system. The second deals with limiting complexity in the system’s
 design.</p>
<h4 id="ch10lev2sec1">Control and Observe System State</h4>
<p class="noindent">Control and observation are so central to 
testability that some authors even define testability in those terms. 
The two go hand-in-hand; it makes no sense to control something if you 
can’t observe what happens when you do. The simplest form of control and
 observation is to provide a software component with a set of inputs, 
let it do its work, and then observe its outputs. However, the control 
and observe system state category of testability tactics provides 
insight into software that goes beyond its inputs and outputs. These 
tactics cause a component to maintain some sort of state information, 
allow testers to assign a value to that state information, and/or make 
that information accessible to testers on demand. The state information 
might be an operating state, the value of some key variable, performance
 load, intermediate process steps, or anything else useful to 
re-creating component behavior. Specific tactics include the following:</p>
<p class="indenthangingB"><a id="page_165"></a>• <em>Specialized interfaces.</em>
 Having specialized testing interfaces allows you to control or capture 
variable values for a component either through a test harness or through
 normal execution. Examples of specialized test routines include these:</p>
<p class="indenthangingBB">• A <em>set</em> and <em>get</em> method for 
important variables, modes, or attributes (methods that might otherwise 
not be available except for testing purposes)</p>
<p class="indenthangingBB">• A <em>report</em> method that returns the full state of the object</p>
<p class="indenthangingBB">• A <em>reset</em> method to set the internal state (for example, all the attributes of a class) to a specified internal state</p>
<p class="indenthangingBB">• A method to turn on verbose output, various levels of event logging, performance instrumentation, or resource monitoring</p>
<p class="indenthangingBP1">Specialized testing interfaces and methods 
should be clearly identified or kept separate from the access methods 
and interfaces for required functionality, so that they can be removed 
if needed. (However, in performance-critical and some safety-critical 
systems, it is problematic to field different code than that which was 
tested. If you remove the test code, how will you know the code you 
field has the same behavior, particularly the same timing behavior, as 
the code you tested? For other kinds of systems, however, this strategy 
is effective.)</p>
<p class="indenthangingB">• <em>Record/playback</em>. The state that 
caused a fault is often difficult to re-create. Recording the state when
 it crosses an interface allows that state to be used to “play the 
system back” and to re-create the fault. Record/playback refers to both 
capturing information crossing an interface and using it as input for 
further testing.</p>
<p class="indenthangingB">• <em>Localize state storage</em>. To start a 
system, subsystem, or module in an arbitrary state for a test, it is 
most convenient if that state is stored in a single place. By contrast, 
if the state is buried or distributed, this becomes difficult if not 
impossible. The state can be fine-grained, even bit-level, or 
coarse-grained to represent broad abstractions or overall operational 
modes. The choice of granularity depends on how the states will be used 
in testing. A convenient way to “externalize” state storage (that is, to
 make it able to be manipulated through interface features) is to use a 
state machine (or state machine object) as the mechanism to track and 
report current state.</p>
<p class="indenthangingB">• <em>Abstract data sources.</em> Similar to 
controlling a program’s state, easily controlling its input data makes 
it easier to test. Abstracting the interfaces lets you substitute test 
data more easily. For example, if you have a database of customer 
transactions, you could design your architecture so that it is easy to 
point your test system at other test databases, or possibly even to 
files of test data instead, without having to change your functional 
code.</p>
<p class="indenthangingB">• <em>Sandbox</em>. “Sandboxing” refers to 
isolating an instance of the system from the real world to enable 
experimentation that is unconstrained by the worry <a id="page_166"></a>about
 having to undo the consequences of the experiment. Testing is helped by
 the ability to operate the system in such a way that it has no 
permanent consequences, or so that any consequences can be rolled back. 
This can be used for scenario analysis, training, and simulation. (The 
Spring framework, which is quite popular in the Java community, comes 
with a set of test utilities that support this. Tests are run as a 
“transaction,” which is rolled back at the end.)</p>
<p class="indenthangingBP1">A common form of sandboxing is to virtualize
 resources. Testing a system often involves interacting with resources 
whose behavior is outside the control of the system. Using a sandbox, 
you can build a version of the resource whose behavior is under your 
control. For example, the system clock’s behavior is typically not under
 our control—it increments one second each second—which means that if we
 want to make the system think it’s midnight on the day when all of the 
data structures are supposed to overflow, we need a way to do that, 
because waiting around is a poor choice. By having the capability to 
abstract system time from clock time, we can allow the system (or 
components) to run at faster than wall-clock time, and to allow the 
system (or components) to be tested at critical time boundaries (such as
 the next shift on or off Daylight Savings Time). Similar 
virtualizations could be done for other resources, such as memory, 
battery, network, and so on. Stubs, mocks, and dependency injection are 
simple but effective forms of virtualization.</p>
<p class="indenthangingB">• <em>Executable assertions</em>. Using this 
tactic, assertions are (usually) hand-coded and placed at desired 
locations to indicate when and where a program is in a faulty state. The
 assertions are often designed to check that data values satisfy 
specified constraints. Assertions are defined in terms of specific data 
declarations, and they must be placed where the data values are 
referenced or modified. Assertions can be expressed as pre- and 
post-conditions for each method and also as class-level invariants. This
 results in increasing observability, when an assertion is flagged as 
having failed. Assertions systematically inserted where data values 
change can be seen as a manual way to produce an “extended” type. 
Essentially, the user is annotating a type with additional checking 
code. Any time an object of that type is modified, the checking code is 
automatically executed, and warnings are generated if any conditions are
 violated. To the extent that the assertions cover the test cases, they 
effectively embed the test oracle in the code—assuming the assertions 
are correct and correctly coded.</p>
<p class="indent">All of these tactics add capability or abstraction to 
the software that (were we not interested in testing) otherwise would 
not be there. They can be seen as replacing bare-bones, get-the-job-done
 software with more elaborate software that has bells and whistles for 
testing. There are a number of techniques for effecting this 
replacement. These are not testability tactics, per se, but techniques 
for replacing one component with a different version of itself. They 
include the following:</p>
<p class="indenthangingB"><a id="page_167"></a>• Component replacement, 
which simply swaps the implementation of a component with a different 
implementation that (in the case of testability) has features that 
facilitate testing. Component replacement is often accomplished in a 
system’s build scripts.</p>
<p class="indenthangingB">• Preprocessor macros that, when activated, 
expand to state-reporting code or activate probe statements that return 
or display information, or return control to a testing console.</p>
<p class="indenthangingB">• Aspects (in aspect-oriented programs) that handle the cross-cutting concern of how state is reported.</p>
<h4 id="ch10lev2sec2">Limit Complexity</h4>
<p class="noindent">Complex software is harder to test. This is because,
 by the definition of complexity, its operating state space is very 
large and (all else being equal) it is more difficult to re-create an 
exact state in a large state space than to do so in a small state space.
 Because testing is not just about making the software fail but about 
finding the fault that caused the failure so that it can be removed, we 
are often concerned with making behavior repeatable. This category has 
three tactics:</p>
<p class="indenthangingB">• <em>Limit structural complexity.</em> This 
tactic includes avoiding or resolving cyclic dependencies between 
components, isolating and encapsulating dependencies on the external 
environment, and reducing dependencies between components in general 
(for example, reduce the number of external accesses to a module’s 
public data). In object-oriented systems, you can simplify the 
inheritance hierarchy: Limit the number of classes from which a class is
 derived, or the number of classes derived from a class. Limit the depth
 of the inheritance tree, and the number of children of a class. Limit 
polymorphism and dynamic calls. One structural metric that has been 
shown empirically to correlate to testability is called the <em>response</em>
 of a class. The response of class C is a count of the number of methods
 of C plus the number of methods of other classes that are invoked by 
the methods of C. Keeping this metric low can increase testability.</p>
<p class="indenthangingBP1">Having high cohesion, loose coupling, and separation of concerns—all modifiability tactics (see <a href="https://www.safaribooksonline.com/library/view/software-architecture-in/9780132942799/ch07.html#ch07">Chapter 7</a>)—can
 also help with testability. They are a form of limiting the complexity 
of the architectural elements by giving each element a focused task with
 limited interaction with other elements. Separation of concerns can 
help achieve controllability and observability (as well as reducing the 
size of the overall program’s state space). Controllability is critical 
to making testing tractable, as Robert Binder has noted: “A component 
that can act independently of others is more readily controllable. . . .
 With high coupling among classes it is typically more difficult to 
control the class under test, thus reducing testability. . . . If user 
interface capabilities are entwined with basic functions it will be more
 difficult to test each function” <a href="https://www.safaribooksonline.com/library/view/software-architecture-in/9780132942799/app01.html#bib01_023">[Binder 94]</a>.</p>
<p class="indenthangingBP1"><a id="page_168"></a>Also, systems that 
require complete data consistency at all times are often more complex 
than those that do not. If your requirements allow it, consider building
 your system under the “eventual consistency” model, where sooner or 
later (but maybe not right now) your data will reach a consistent state.
 This often makes system design simpler, and therefore easier to test.</p>
<p class="indenthangingBP1">Finally, some architectural styles lend 
themselves to testability. In a layered style, you can test lower layers
 first, then test higher layers with confidence in the lower layers.</p>
<p class="indenthangingB">• <em>Limit nondeterminism.</em> The 
counterpart to limiting structural complexity is limiting behavioral 
complexity, and when it comes to testing, nondeterminism is a very 
pernicious form of complex behavior. Nondeterministic systems are harder
 to test than deterministic systems. This tactic involves finding all 
the sources of nondeterminism, such as unconstrained parallelism, and 
weeding them out as much as possible. Some sources of nondeterminism are
 unavoidable—for instance, in multi-threaded systems that respond to 
unpredictable events—but for such systems, other tactics (such as 
record/playback) are available.</p>
<p class="indenthangingBP"><a href="https://www.safaribooksonline.com/library/view/software-architecture-in/9780132942799/ch10.html#ch10fig04">Figure 10.4</a> provides a summary of the tactics used for testability.</p>
<div class="image"><a id="ch10fig04"></a><img data-mfp-src="/library/view/software-architecture-in/9780132942799/graphics/10fig04.jpg" src="10.%20Testability_files/10fig04.jpg" alt="Image" height="468" width="630"></div>
<p class="fig-caption">Figure 10.4. Testability tactics</p>
<h3 id="ch10lev1sec3"><a id="page_169"></a>10.3. A Design Checklist for Testability</h3>
<p class="noindent"><a href="https://www.safaribooksonline.com/library/view/software-architecture-in/9780132942799/ch10.html#ch10tab02">Table 10.2</a> is a checklist to support the design and analysis process for testability.</p>
<p class="tab-caption"><a id="ch10tab02"></a>Table 10.2. Checklist to Support the Design and Analysis Process for Testability</p>
<div class="image"><img data-mfp-src="/library/view/software-architecture-in/9780132942799/graphics/10tab02.jpg" src="10.%20Testability_files/10tab02.jpg" alt="Image" height="475" width="630"></div>
<div class="image"><img data-mfp-src="/library/view/software-architecture-in/9780132942799/graphics/10tab02a.jpg" src="10.%20Testability_files/10tab02a.jpg" alt="Image" height="451" width="630"></div>
<div class="image"><a id="page_170"></a><img data-mfp-src="/library/view/software-architecture-in/9780132942799/graphics/10tab02b.jpg" src="10.%20Testability_files/10tab02b.jpg" alt="Image" height="440" width="630"></div>
<div class="sidebar"><hr>
<p class="title"><a id="ch10sb02"></a>Now That Your Architecture Is Set to Help You Test. . .</p>
<p class="sb-noindent"><em>By Nick Rozanski, coauthor (with Eoin Woods) of</em> Software Systems Architecture: Working With Stakeholders Using Viewpoints and Perspectives</p>
<p class="sb-noindent">In addition to architecting your system to make 
it amenable to testing, you will need to overcome two more specific and 
daunting challenges when testing very large or complex systems, namely 
test data and test automation.</p>
<p class="division">Test Data</p>
<p class="sb-noindent">Your first challenge is how to create large, consistent and useful <em>test data sets</em>.
 This is a significant problem in my experience, particularly for 
integration testing (that is, testing a number of components to confirm 
that they work together correctly) and performance testing (confirming 
that <a id="page_171"></a>the system meets it requirements for 
throughput, latency, and response time). For unit tests, and usually for
 user acceptance tests, the test data is typically created by hand.</p>
<p class="sb-indent">For example, you might need 50 products, 100 
customers, and 500 orders in your test database, so that you can test 
the functional steps involved in creating, amending, or deleting orders.
 This data has to be sufficiently varied to make testing worthwhile, it 
has to conform to all the referential integrity rules and other 
constraints of your data model, and you need to be able to calculate and
 specify the expected results of the tests.</p>
<p class="sb-indent">I’ve seen—and been involved in—two ways of doing 
this: you either write a system to generate your test data, or you 
capture a representative data set from the production environment and 
anonymize it as necessary. (Anonymizing test data involves removing any 
sensitive information, such as personal data about people or 
organizations, financial details, and so on.)</p>
<p class="sb-indent">Creating your own test data is the ideal, because 
you know what data you are using and can ensure that it covers all of 
your edge cases, but it is a lot of effort. Capturing data from the live
 environment is easier, assuming that there is a system there already, 
but you don’t know what data and hence what coverage you’re going to 
get, and you may have to take extra care to conform to privacy and data 
protection legislation.</p>
<p class="sb-indent">This can have an impact on the system’s 
architecture in a number of ways, and should be given due consideration 
early on by the architect. For example, the system may need to be able 
to capture live transactions, or take “snapshots” of live data, which 
can be used to generate test data. In addition, the test-data-generation
 system may need an architecture of its own.</p>
<p class="division">Test Automation</p>
<p class="sb-noindent">Your second challenge is around <em>test automation</em>.
 In practice it is not possible to test large systems by hand because of
 the number of tests, their complexity, and the amount of checking of 
results that’s required. In the ideal world, you create a test 
automation framework to do this automatically, which you feed with test 
data, and set running every night, or even run every time you check in 
something (the continuous integration model).</p>
<p class="sb-indent">This is an area that is given too little attention 
on many large software development projects. It is often not budgeted 
for in the project plan, with an unwritten assumption that the effort 
needed to build it can be somehow “absorbed” into the development costs.
 A test automation framework can be a significantly complex thing in its
 own right (which raises the question of how you test it!). It should be
 scoped and planned like any other project deliverable.</p>
<p class="sb-indent">Due consideration should be given to how the 
framework will invoke functions on the system under test, particularly 
for testing user interfaces, which is almost without exception a 
nightmare. (The execution of a UI test is highly dependent on the layout
 of the windows, the ordering of fields, and so on, which usually 
changes a lot in heavily user-focused systems. It is sometimes possible 
to execute window controls programmatically, but in the worst case you 
may have to record and replay keystrokes or mouse movements.)</p>
<p class="sb-indent"><a id="page_172"></a>There are lots of tools to 
help with this nowadays, such as Quick Test Pro, TestComplete, or 
Selenium for testing, and CruiseControl, Hudson, and TeamCity for 
continuous integration. A comprehensive list on the web can be found 
here: <a href="http://en.wikipedia.org/wiki/Test_automation">en.wikipedia.org/wiki/Test_automation</a>.</p>
<hr></div>
<h3 id="ch10lev1sec4">10.4. Summary</h3>
<p class="noindent">Ensuring that a system is easily testable has 
payoffs both in terms of the cost of testing and the reliability of the 
system. A vehicle often used to execute the tests is the test harness. 
Test harnesses are software systems that encapsulate test resources such
 as test cases and test infrastructure so that it is easy to reapply 
tests across iterations and it is easy to apply the test infrastructure 
to new increments of the system. Another vehicle is the creation of test
 cases prior to the development of a component, so that developers know 
which tests their component must pass.</p>
<p class="indent">Controlling and observing the system state is a major 
class of testability tactics. Providing the ability to do fault 
injection, to record system state at key portions of the system, to 
isolate the system from its environment, and to abstract various 
resources are all different tactics to support the control and 
observation of a system and its components.</p>
<p class="indent">Complex systems are difficult to test because of the 
large state space in which their computations take place, and because of
 the larger number of interconnections among the elements of the system.
 Consequently, keeping the system simple is another class of tactics 
that supports testability.</p>
<h3 id="ch10lev1sec5">10.5. For Further Reading</h3>
<p class="noindent">An excellent general introduction to software testing is <a href="https://www.safaribooksonline.com/library/view/software-architecture-in/9780132942799/app01.html#bib01_016">[Beizer 90]</a>.
 For a more modern take on testing, and from the software developer’s 
perspective rather than the tester’s, Freeman and Pryce cover 
test-driven development in the object-oriented realm <a href="https://www.safaribooksonline.com/library/view/software-architecture-in/9780132942799/app01.html#bib01_070">[Freeman 09]</a>.</p>
<p class="indent">Bertolino and Strigini <a href="https://www.safaribooksonline.com/library/view/software-architecture-in/9780132942799/app01.html#bib01_020">[Bertolino 96]</a> are the developers of the model of testing shown in <a href="https://www.safaribooksonline.com/library/view/software-architecture-in/9780132942799/ch10.html#ch10fig01">Figure 10.1</a>.</p>
<p class="indent">Yin and Bieman <a href="https://www.safaribooksonline.com/library/view/software-architecture-in/9780132942799/app01.html#bib01_203">[Yin 94]</a> have written about executable assertions. Hartman <a href="https://www.safaribooksonline.com/library/view/software-architecture-in/9780132942799/app01.html#bib01_086">[Hartman 10]</a> describes a technique for using executable assertions as a means for detecting race conditions.</p>
<p class="indent">Bruntink and van Deursen <a href="https://www.safaribooksonline.com/library/view/software-architecture-in/9780132942799/app01.html#bib01_038">[Bruntink 06]</a> write about the impact of structure on testing.</p>
<p class="indent"><a id="page_173"></a>Jeff Voas’s foundational work on 
testability and the relationship between testability and reliability is 
worthwhile. There are several papers to choose from, but <a href="https://www.safaribooksonline.com/library/view/software-architecture-in/9780132942799/app01.html#bib01_195">[Voas 95]</a> is a good start that will point you to others.</p>
<h3 id="ch10lev1sec6">10.6. Discussion Questions</h3>
<p class="question"><strong>1.</strong> A testable system is one that 
gives up its faults easily. That is, if a system contains a fault, then 
it doesn’t take long or much effort to make that fault show up. On the 
other hand, fault tolerance is all about designing systems that 
jealously hide their faults; there, the whole idea is to make it very 
difficult for a system to reveal its faults. Is it possible to design a 
system that is both highly testable <em>and</em> highly fault tolerant, or are these two design goals inherently incompatible? Discuss.</p>
<p class="question"><strong>2.</strong> “Once my system is in routine use by end users, it should <em>not</em>
 be highly testable, because if it still contains faults—and all systems
 probably do—then I don’t want them to be easily revealed.” Discuss.</p>
<p class="question"><strong>3.</strong> Many of the tactics for testability are also useful for achieving modifiability. Why do you think that is?</p>
<p class="question"><strong>4.</strong> Write some concrete testability 
scenarios for an automatic teller machine. How would you modify your 
design for the automatic teller machine to accommodate these scenarios?</p>
<p class="question"><strong>5.</strong> What other quality attributes do
 you think testability is most in conflict with? What other quality 
attributes do you think testability is most compatible with?</p>
<p class="question"><strong>6.</strong> One of our tactics is to limit 
nondeterminism. One method is to use locking to enforce synchronization.
 What impact does the use of locks have on other quality attributes?</p>
<p class="question"><strong>7.</strong> Suppose you’re building the next
 great social networking system. You anticipate that within a month of 
your debut, you will have half a million users. You can’t pay half a 
million people to test your system, and yet it has to be robust and easy
 to use when all half a million are banging away at it. What should you 
do? What tactics will help you? Write a testability scenario for this 
social networking system.</p>
<p class="question"><strong>8.</strong> Suppose you use executable 
assertions to improve testability. Make a case for, and then a case 
against, allowing the assertions to run in the production system as 
opposed to removing them after testing.</p>
<div class="annotator-outer annotator-viewer annotator-hide viewer">
  <ul class="annotator-widget annotator-listing"></ul>
</div><div class="annotator-editor-wrapper"><div class="annotator-outer annotator-editor annotator-hide">
  <h3 class="title">Highlight</h3><form class="annotator-widget">
    <ul class="annotator-listing"><li class="annotator-item"><textarea maxlength="750" placeholder="Add a note (optional)" id="annotator-field-0"></textarea></li></ul>
    <div class="annotator-controls">
      <a href="#cancel" class="annotator-cancel button">Cancel</a>
<a href="#save" class="annotator-save annotator-focus button positive">Save</a>
    </div>
  </form>
</div></div><div style="display: none;" class="annotator-adder"><button><span></span></button></div></div></div>



  <div class="t-sbo-prev sbo-prev sbo-nav-bottom">
  
    
      
        <a href="https://www.safaribooksonline.com/library/view/software-architecture-in/9780132942799/ch09.html" class="prev nav-link">
      
          <span aria-hidden="true" class="pagination-label t-prev-label">Prev</span>
          <span class="visuallyhidden">Previous Chapter</span>
          <div class="pagination-title t-prev-title">9. Security</div>
        </a>
    
  
  </div>

  <div class="t-sbo-next sbo-next sbo-nav-bottom">
  
    
      
        <a href="https://www.safaribooksonline.com/library/view/software-architecture-in/9780132942799/ch11.html" class="next nav-link">
      
          <span aria-hidden="true" class="pagination-label t-next-label">Next</span>
          <span class="visuallyhidden">Next Chapter</span>
          <div class="pagination-title t-next-title">11. Usability</div>
        </a>
    
  
  </div>


      
    </section>
    <div class="reading-controls-bottom">
      <ul class="interface-controls js-bitlist">
        <li class="queue-control">
            <button title="Add to Queue" aria-label="Add to Queue" data-for-analytics="9780132942799:ch10.html" type="button" class="rec-fav ss-queue js-queue js-current-chapter-queue" data-queue-endpoint="/api/v1/book/9780132942799/chapter/ch10.html">
      <span>Add to Queue</span>
  </button>
        </li>
      </ul>
    </div>
  </div>
  <div class="js-related-container related"></div>
<section class="sbo-saved-archives"></section>



          
          
  





    
    
      <div id="js-subscribe-nag" class="subscribe-nag clearfix trial-panel  collapsed slideUp">
        <a href="#" class="js-toggle-nag ss-navigateup" title="Toggle open or close footer"></a>
        <div class="sample-message">
          <p class="usage-data t-collapsed-text">Enjoy Safari? 
            <a href="https://www.safaribooksonline.com/subscribe/">
              Subscribe Today
              
            </a>
          </p>
          

        <div class="expanded">
          <h2>You have 10 days left in your trial, Aejunknaja. </h2>
          <p class="t-expanded-text">Safari is your trusted guide for building a remarkable career. We hope you've been enjoying your trial—ready to join?</p>
          <a href="https://www.safaribooksonline.com/subscribe/" class="bigbutton positive">
            Subscribe Today
            
          </a>
          
            <footer style="padding-bottom: 69.2px;" class="pagefoot js-pagefoot">
    <div class="wrapper">
      <a href="https://www.safaribooksonline.com/" id="logo">Safari</a>
      <nav>
        <a href="https://www.safaribooksonline.com/public/support" class="full-support">Support</a> /
        <a href="https://www.safaribooksonline.com/contact/">Contact Us</a> /
        <a href="https://www.safaribooksonline.com/blog/">Blog</a>
      </nav>
      <div id="legal">
        <ul>
          <li>© 2016 <a class="copyright" href="https://www.safaribooksonline.com/">Safari</a> <br class="mobile-support"> <a href="https://www.safaribooksonline.com/terms/">Terms of Service</a> </li>
          <li><a href="https://www.safaribooksonline.com/membership-agreement/">Membership Agreement</a></li>
          <li><a href="https://www.safaribooksonline.com/privacy/">Privacy Policy</a></li>
        </ul>
      </div>
    </div>
  </footer>

        </div>
      </div>
    </div>

    
    



        
      </div>
      



  <footer style="padding-bottom: 69.2px;" class="pagefoot t-pagefoot">
    <a style="display: none;" href="#" class="icon-up"><div class="visuallyhidden">Back to top</div></a>
    <ul class="js-footer-nav">
      
        <li><a class="t-recommendations-footer" href="https://www.safaribooksonline.com/r/">Recommended</a></li>
      
      <li><a class="t-queue-footer" href="https://www.safaribooksonline.com/s/">Queue</a></li>
      
        <li><a class="t-recent-footer" href="https://www.safaribooksonline.com/recent/">Recent</a></li>
        <li><a class="t-topics-footer" href="https://www.safaribooksonline.com/topics?q=*&amp;limit=21">Topics</a></li>
      
      
        <li><a class="t-tutorials-footer" href="https://www.safaribooksonline.com/tutorials/">Tutorials</a></li>
      
      <li><a class="t-settings-footer js-settings" href="https://www.safaribooksonline.com/u/">Settings</a></li>
      <li><a href="https://www.safaribooksonline.com/blog/">Blog</a></li>
      <li class="full-support"><a href="https://www.safaribooksonline.com/public/support">Support</a></li>
      <li><a href="https://community.safaribooksonline.com/">Feedback</a></li>
      <li><a href="https://www.safaribooksonline.com/accounts/logout/">Sign Out</a></li>
    </ul>
    <span class="copyright">© 2016 <a href="https://www.safaribooksonline.com/" target="_blank">Safari</a>.</span>
    <br class="mobile-support">
    <a href="https://www.safaribooksonline.com/terms/">Terms of Service</a> /
    <a href="https://www.safaribooksonline.com/privacy/">Privacy Policy</a>
  </footer>

<script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"applicationTime":146,"agent":"js-agent.newrelic.com/nr-768.min.js","applicationID":"3275661","errorBeacon":"bam.nr-data.net","beacon":"bam.nr-data.net","queueTime":0,"transactionName":"YgdaZ0NSW0cEB0RdWltNfkZfUEFdCgofXFBHDVYdR1pQQxZeRl1QQj1aWkU=","licenseKey":"510f1a6865"}</script>


    

    <script src="10.%20Testability_files/a" charset="utf-8"></script>
    <script src="10.%20Testability_files/a_002" charset="utf-8"></script>
    
      <script src="10.%20Testability_files/require.js"></script>
      <script>
        require(["/static/js/pages/_config.1113c6153f5e.js"], function (common) {
          require(["/static/js/nest/_init.1198db94d0a6.js"]);
        });
      </script>
    
    
  
  
  
  <script> // <![CDATA[
    var g = {
      position_cache: {
        
          "chapter": "/api/v1/book/9780132942799/chapter/ch10.html",
          "book_id": "9780132942799",
          "chapter_uri": "ch10.html",
          "position": 0,
          "user_uuid": "10f9e41b-1414-4ac1-bc80-973364aac808",
          "next_chapter_uri": "/library/view/software-architecture-in/9780132942799/ch11.html"
        
      },
      title: "Software Architecture in Practice, Third Edition",
      author_list: "Rick Kazman, Paul Clements, Len Bass",
      format: "book",
      source: "application/epub+zip",
      is_system_book: true,
      is_public: false,
      loaded_from_server: true,
      allow_scripts: false,
      has_mathml: false
    };
    // ]]>
  </script>
  
  


  
  <script>
    
      
        

        
          
            window.PUBLIC_ANNOTATIONS = true;
          
        

      

      
        window.MOBILE_PUBLIC_ANNOTATIONS = false;
      

    

  </script>

  
    
  


    
    


  

<div style="top: 200px; left: 1450px;" class="font-flyout"><div class="font-controls-panel">
	<div class="nightmodes">
		<ul>
			<li class="day"><a href="#" id="day-mode" title="Day Mode">
				<i class="fa fa-sun-o"></i>
				<span>Day Mode</span></a></li>
			<li class="cloudy"><a href="#" id="cloudy-mode" title="Cloudy Mode">
				<i class="fa fa-cloud"></i>
				<span>Cloud Mode</span>
			</a></li>
			<li class="night"><a href="#" id="night-mode" title="Night Mode">
				<i class="fa fa-moon-o"></i>
				<span>Night Mode</span>
			</a></li>
		</ul>
	</div>

	<div class="font-resizer resizer">
		<div class="draggable-containment-wrapper">
			<i class="fa fa-font left"></i>
			<span style="width: 50%;" class="filler"></span>
			<div style="position: relative; left: 80px;" id="js-font-size-draggable" class="draggable ui-widget-content ui-draggable ui-draggable-handle"></div>
			<i class="fa fa-font right"></i>
		</div>
	</div>

	<div class="column-resizer resizer">
		<div class="draggable-containment-wrapper">
			<i class="fa fa-compress left"></i>
			<span style="width: 50%;" class="filler"></span>
			<div style="position: relative; left: 80px;" id="js-column-size-draggable" class="draggable ui-widget-content ui-draggable ui-draggable-handle"></div>
			<i class="fa fa-expand right"></i>
		</div>
	</div>

	<a id="reset" class="button" href="#">Reset</a>
</div>
</div><div class="annotator-notice"></div></body></html>